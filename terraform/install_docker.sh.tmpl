#!/bin/bash
set -e

apt-get update -y
apt-get install -y docker.io
systemctl enable docker
systemctl start docker

%{ if is_manager }

# Redirigir la salida a un archivo de log para depuración
exec > /tmp/user_data.log 2>&1
set -x

# Configurar almacenamiento persistente para PostgreSQL
mkfs.ext4 /dev/disk/by-id/scsi-0DO_Volume_swarm-postgres-data
mkdir -p /mnt/data
mount /dev/disk/by-id/scsi-0DO_Volume_swarm-postgres-data /mnt/data
echo "/dev/disk/by-id/scsi-0DO_Volume_swarm-postgres-data /mnt/data ext4 defaults,nofail 0 2" >> /etc/fstab

echo "${internal_pubkey}" >> /root/.ssh/authorized_keys
docker swarm init --advertise-addr $(hostname -I | awk '{print $1}')
docker network create --driver overlay --attachable ${network}
docker swarm join-token -q worker > /root/worker_token.txt
%{ else }
mkdir -p /root/.ssh
chmod 700 /root/.ssh
echo "${internal_privkey}" > /root/.ssh/id_rsa
chmod 600 /root/.ssh/id_rsa
ssh-keyscan -H ${manager_ip} >> /root/.ssh/known_hosts
# Esperar hasta que el token esté disponible en el manager
for i in {1..30}; do
  if ssh -o StrictHostKeyChecking=no root@${manager_ip} "[ -f /root/worker_token.txt ]"; then
    break
  fi
  echo "Esperando que el token esté disponible en el manager..."
  sleep 5
done
token=$(ssh -o StrictHostKeyChecking=no root@${manager_ip} "cat /root/worker_token.txt")
docker swarm join --token $token ${manager_ip}:2377
ssh -o StrictHostKeyChecking=no root@${manager_ip} "docker node update --label-add role=app $(hostname)"
%{ endif }
